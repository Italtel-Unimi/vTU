#!/bin/bash
#
# vTUrunner  
#
##

#source $VTUBASEDIR/sys/vTUsetting
#source /home/alevirt/Virt/vTU/sys/vTUsetting
source /vTU/sys/vTUsetting

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$LIBCUDA

# DEBUG  - arguments list
echo $VTUDIR/$VTUBIN/vTUrunner $* 

if [ "$1" == "" ]
then
  $VTUBASEDIR/sys/vTUlogger "Error parameter 1" 
  exit 501 
fi

if [ "$2" == "" ]
then
  $VTUBASEDIR/sys/vTUlogger "Error parameter 2" 
  exit 502 
fi

if [ "$3" == "" ]
then
  $VTUBASEDIR/sys/vTUlogger "Error parameter 3" 
  exit 503 
fi

if [ "$4" == "" ]
then
  $VTUBASEDIR/sys/vTUlogger "Error parameter 4" 
  exit 504
fi

XMLFILE=$1
NR=$2
DATA=$3
TODAY=$4

#mv $VTUDIR/$VTUSPOOL/$XMLFILE $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA
mv $VTUDIR/$VTUSPOOL/$XMLFILE $VTUDIR/$VTUTMP/$XMLFILE.$NR.$DATA

vTUlogger "Parsing " $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA

if [ "$XMLEXE" == xmlstarlet ]
then
  $XMLEXE fo $VTUDIR/$VTUTMP/$XMLFILE.$NR.$DATA > $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA
elif [ "$XMLEXE" == xmllint ]
then
  $XMLEXE --format $VTUDIR/$VTUTMP/$XMLFILE.$NR.$DATA > $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA
else
  vTUlogger "$XMLEXE Not implemented yet " $VTUDIR/$VTUERR/$TODAY/$XMLFILE.$NR.$DATA.log
  echo "$XMLEXE Not implemented yet " >> $VTUDIR/$VTUERR/$TODAY/$XMLFILE.$NR.$DATA.log
fi

MAXOUT=`grep "<out>" $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA | wc -l`
awk '/<out>/{sub("<out>", "<out"++v">")}1' $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA > $VTUDIR/$VTUTMP/$XMLFILE.$NR.$DATA && mv $VTUDIR/$VTUTMP/$XMLFILE.$NR.$DATA $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA
awk '/<\/out>/{sub("</out>", "</out"++v">")}1' $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA > $VTUDIR/$VTUTMP/$XMLFILE.$NR.$DATA && mv $VTUDIR/$VTUTMP/$XMLFILE.$NR.$DATA $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA

for NROUT in `seq 1 $MAXOUT`
do

  rtspInIp=
  rtspInPort=
  rtspInStream=
  rtspInTimeout=
  rtspOutIp=
  rtspOutPort=
  rtspOutStream=
  localInStream=
  localOutStream=
  localOutOverWr=
  codecFin=
  codecVin=
  codecAin=
  codecVOin=
  codecAOin=
  codecVinSize=

  codecFout=
  codecVout=
  codecAout=
  codecVOout=
  codecAOout=
  codecVbitrate=
  codecAbitrate=
  
  codecVoutSize=
  codecVoutSizeWidth=
  codecVoutSizeHeigth=
  codecVframerate=
  codecAsamplerate=
  codecAchannels=


  if [ "$XMLEXE" == xmlstarlet ]
  then
    rtspInIp=`$XMLEXE             sel -t -v '/vTU/in/rtsp/ip'                    $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspInPort=`$XMLEXE           sel -t -v '/vTU/in/rtsp/port'                  $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspInStream=`$XMLEXE         sel -t -v '/vTU/in/rtsp/stream'                $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspInTimeout=`$XMLEXE        sel -t -v '/vTU/in/rtsp/timeout'               $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspOutIp=`$XMLEXE            sel -t -v '/vTU/out'$NROUT'/rtsp/ip'           $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspOutPort=`$XMLEXE          sel -t -v '/vTU/out'$NROUT'/rtsp/port'         $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspOutStream=`$XMLEXE        sel -t -v '/vTU/out'$NROUT'/rtsp/stream'       $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    localInStream=`$XMLEXE        sel -t -v '/vTU/in/local/stream'               $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    localOutStream=`$XMLEXE       sel -t -v '/vTU/out'$NROUT'/local/stream'      $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    localOutOverWr=`$XMLEXE       sel -t -v '/vTU/out'$NROUT'/local/overwrite'   $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecFin=`$XMLEXE             sel -t -v '/vTU/in/codec/container'            $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecVin=`$XMLEXE             sel -t -v '/vTU/in/codec/vcodec'               $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecAin=`$XMLEXE             sel -t -v '/vTU/in/codec/acodec'               $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecFout=`$XMLEXE            sel -t -v '/vTU/out'$NROUT'/codec/container'   $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecVout=`$XMLEXE            sel -t -v '/vTU/out'$NROUT'/codec/vcodec'      $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecAout=`$XMLEXE            sel -t -v '/vTU/out'$NROUT'/codec/acodec'      $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecVbitrate=`$XMLEXE        sel -t -v '/vTU/out'$NROUT'/codec/vbitrate'    $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecAbitrate=`$XMLEXE        sel -t -v '/vTU/out'$NROUT'/codec/abitrate'    $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`

    codecVinSize=`$XMLEXE         sel -t -v '/vTU/in/codec/vsize'                $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecVoutSize=`$XMLEXE        sel -t -v '/vTU/out'$NROUT'/codec/vsize'       $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecVoutSizeWidth=`$XMLEXE   sel -t -v '/vTU/out'$NROUT'/codec/vsizewidth'  $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecVoutSizeHeight=`$XMLEXE  sel -t -v '/vTU/out'$NROUT'/codec/vsizeheight' $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecVframerate=`$XMLEXE      sel -t -v '/vTU/out'$NROUT'/codec/vframerate'  $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecAsamplerate=`$XMLEXE     sel -t -v '/vTU/out'$NROUT'/codec/asamplerate' $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecAchannels=`$XMLEXE       sel -t -v '/vTU/out'$NROUT'/codec/achannels'   $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`

    echo -e $XMLEXE sel -t -v '/vTU/in/rtsp/ip'     '\t\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspInIp >>       $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/in/rtsp/port'   '\t\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspInPort >>     $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/in/rtsp/stream'   '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspInStream >>   $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/in/rtsp/timeout'  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspInTimeout >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/rtsp/ip'    '\t\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspOutIp >>      $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/rtsp/port'    '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspOutPort >>    $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/rtsp/stream'  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspOutStream >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/in/local/stream'  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $localInStream >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/local/stream' '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $localOutStream >> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/local/overwrite' '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $localOutOverWr >> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/in/codec/container   '  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecFin >>       $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/in/codec/vcodec   '  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVin >>       $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/in/codec/acodec   '  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecAin >>       $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/container' '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecFout >>      $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/vcodec   ' '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVout >>      $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/acodec   ' '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecAout >>      $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/vbitrate ' '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVbitrate >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/abitrate ' '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecAbitrate >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
	
    echo -e $XMLEXE sel -t -v '/vTU/in/codec/vsize '        '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVinSize >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/vsize '       '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVoutSize >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/vsizewidth '  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVoutSizeWidth >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/vsizeheight ' '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVoutSizeHeight >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/vframerate '  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVframerate >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/asamplerate ' '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecAsamplerate >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE sel -t -v '/vTU/out'$NROUT'/codec/achannels '   '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecAchannels >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
	

  elif [ "$XMLEXE" == xmllint ]
  then
    rtspInIp=`$XMLEXE            -xpath '/vTU/in/rtsp/ip/text()'                    $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspInPort=`$XMLEXE          -xpath '/vTU/in/rtsp/port/text()'                  $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspInStream=`$XMLEXE        -xpath '/vTU/in/rtsp/stream/text()'                $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspInTimeout=`$XMLEXE       -xpath '/vTU/in/rtsp/timeout/text()'               $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspOutIp=`$XMLEXE           -xpath '/vTU/out'$NROUT'/rtsp/ip/text()'           $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspOutPort=`$XMLEXE         -xpath '/vTU/out'$NROUT'/rtsp/port/text()'         $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    rtspOutStream=`$XMLEXE       -xpath '/vTU/out'$NROUT'/rtsp/stream/text()'       $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    localInStream=`$XMLEXE       -xpath '/vTU/in/local/stream/text()'               $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    localOutStream=`$XMLEXE      -xpath '/vTU/out'$NROUT'/local/stream/text()'      $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    localOutOverWr=`$XMLEXE      -xpath '/vTU/out'$NROUT'/local/overwrite/text()'   $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecFin=`$XMLEXE            -xpath '/vTU/in/codec/container/text()'            $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecVin=`$XMLEXE            -xpath '/vTU/in/codec/vcodec/text()'               $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecAin=`$XMLEXE            -xpath '/vTU/in/codec/acodec/text()'               $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecFout=`$XMLEXE           -xpath '/vTU/out'$NROUT'/codec/container/text()'   $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecVout=`$XMLEXE           -xpath '/vTU/out'$NROUT'/codec/vcodec/text()'      $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecAout=`$XMLEXE           -xpath '/vTU/out'$NROUT'/codec/acodec/text()'      $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecVbitrate=`$XMLEXE       -xpath '/vTU/out'$NROUT'/codec/vbitrate/text()'    $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA` 
    codecAbitrate=`$XMLEXE       -xpath '/vTU/out'$NROUT'/codec/abitrate/text()'    $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`

    codecVinSize=`$XMLEXE        -xpath '/vTU/in/codec/vsize/text()'                $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecVoutSize=`$XMLEXE       -xpath '/vTU/out'$NROUT'/codec/vsize/text()'       $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecVoutSizeWidth=`$XMLEXE  -xpath '/vTU/out'$NROUT'/codec/vsizewidth/text()'  $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecVoutSizeHeight=`$XMLEXE -xpath '/vTU/out'$NROUT'/codec/vsizeheight/text()' $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecVframerate=`$XMLEXE     -xpath '/vTU/out'$NROUT'/codec/vframerate/text()'  $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecAsamplerate=`$XMLEXE    -xpath '/vTU/out'$NROUT'/codec/asamplerate/text()' $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`
    codecAchannels=`$XMLEXE      -xpath '/vTU/out'$NROUT'/codec/achannels/text()'   $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA`

    echo -e $XMLEXE -xpath '/vTU/in/rtsp/ip/text()'         '\t\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspInIp >>       $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/in/rtsp/port/text()'       '\t\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspInPort >>     $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/in/rtsp/stream/text()'       '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspInStream >>   $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/in/rtsp/timeout/text()'      '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspInTimeout >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/rtsp/ip/text()'        '\t\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspOutIp >>      $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/rtsp/port/text()'        '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspOutPort >>    $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/rtsp/stream/text()'      '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $rtspOutStream >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/in/local/stream/text()'      '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $localInStream >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/local/stream/text()'     '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $localOutStream >> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/local/overwrite/text()'  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $localOutOverWr >> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/in/codec/container/text()'   '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecFin >>       $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/in/codec/vcodec/text()'      '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVin >>       $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/in/codec/acodec/text()'      '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecAin >>       $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/container/text()'     '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecFout >>      $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/vcodec/text()'     '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVout >>      $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/acodec/text()'     '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecAout >>      $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/vbitrate/text()'   '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVbitrate >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/abitrate/text()'   '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecAbitrate >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/in/codec/vsize/text() '         '\t\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVinSize >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/vsize/text() '     '\t\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVoutSize >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/vsizewidth/text() '  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVoutSizeWidth >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/vsizeheight/text() ' '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVoutSizeHeight >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/vframerate/text() '  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecVframerate >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/asamplerate/text() '  '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecAsamplerate >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
    echo -e $XMLEXE -xpath '/vTU/out'$NROUT'/codec/achannels/text() '    '\t'$VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA '\t'-\> $codecAchannels >>  $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
  else
    vTUlogger "$XMLEXE Not implemented yet " $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA
    echo "$XMLEXE Not implemented yet " >> $VTUDIR/$VTUERR/$TODAY/$XMLFILE.$NR.$DATA.log
  fi

  if [ "$rtspInPort" != "" ] 
  then 
    if [ "$rtspInStream" != "" ] 
    then 
      INCMD="-i rtsp://$VTUBEARIP:$rtspInPort/$rtspInStream"
    else
      INCMD="-i rtsp://$VTUBEARIP:$rtspInPort"
    fi
    if [ "$rtspInTimeout" != "" ] 
    then 
      INCMD="-rtsp_flags listen -timeout "$rtspInTimeout" "$INCMD
      INTIMEOUT=$rtspInTimeout
    else
      INTIMEOUT=0
    fi
  fi

  if [ "$localInStream" != "" ]
  then
    INCMD="-i $VTUDIR/$VTUIN/$localInStream"
  fi

  if [ "$rtspOutIp" != "" ] && [ "$rtspOutPort" != "" ]
  then
    if [ "$rtspOutStream" != "" ] 
    then 
      OUTCMD="-f rtsp rtsp://$rtspOutIp:$rtspOutPort/$rtspOutStream"
      TMPOUTCMD="$VTUDIR/$VTUTMP/$localOutStream"
    else
      OUTCMD="-f rtsp rtsp://$rtspOutIp:$rtspOutPort"
      TMPOUTCMD="$VTUDIR/$VTUTMP/$rtspOutPort"
    fi
  fi
  
  if [ "$localOutStream" != "" ]
  then
    if [ "$localOutOverWr" == "y" ] 
    then
      TMPOUTCMD="$VTUDIR/$VTUTMP/$localOutStream"
      OUTCMD="$VTUDIR/$VTUOUT/$TODAY/$localOutStream"
    else
      TMPOUTCMD="$VTUDIR/$VTUTMP/$localOutStream"
      OUTCMD="$VTUDIR/$VTUOUT/$TODAY/$localOutStream"
    fi
  fi

  if [ "$codecFout" != "" ]
  then
    if   [ "$codecFout" == "raw" ];        then OUTFCODEC="-f rawvideo"
    elif [ "$codecFout" == "rawvideo" ];   then OUTFCODEC="-f rawvideo"
    elif [ "$codecFout" == "nut" ];        then OUTFCODEC="-f nut"
    elif [ "$codecFout" == "ismv" ];       then OUTFCODEC="-f ismv"
    elif [ "$codecFout" == "h264" ];       then OUTFCODEC="-f h264"
    elif [ "$codecFout" == "mp4" ];        then OUTFCODEC="-f mp4"
    elif [ "$codecFout" == "webm" ];       then OUTFCODEC="-f webm"
    elif [ "$codecFout" == "mkv" ];        then OUTFCODEC="-f mkv"
    elif [ "$codecFout" == "mpg" ];        then OUTFCODEC="-f mpeg"
    elif [ "$codecFout" == "mpeg" ];       then OUTFCODEC="-f mpeg"
    elif [ "$codecFout" == "mov" ];        then OUTFCODEC="-f mov"
    elif [ "$codecFout" == "dv" ];         then OUTFCODEC="-f dv"
    elif [ "$codecFout" == "flv" ];        then OUTFCODEC="-f flv"
    elif [ "$codecFout" == "avi" ];        then OUTFCODEC="-f avi"
    elif [ "$codecFout" == "wav" ];        then OUTFCODEC="-f wav"
    elif [ "$codecFout" == "none" ];       then OUTFCODEC=""
    fi
  else
    OUTFCODEC=""
  fi

  if [ "$codecAout" != "" ]
  then
    if   [ "$codecAout" == "mp2" ];        then OUTACODEC="-acodec mp2"
    elif [ "$codecAout" == "mp3" ];        then OUTACODEC="-acodec libmp3lame"
    elif [ "$codecAout" == "flac" ];       then OUTACODEC="-acodec flac"
    elif [ "$codecAout" == "copy" ];       then OUTACODEC="-acodec copy"
    elif [ "$codecAout" == "aac" ];        then OUTACODEC="-acodec aac"
    elif [ "$codecAout" == "vorbis" ];     then OUTACODEC="-acodec vorbis"
    elif [ "$codecAout" == "none" ];       then OUTACODEC="-an"
    fi
  else
    OUTACODEC="-an"
  fi
 
  if [ "$codecVout" != "" ]
  then
    if   [ "$codecVout" == "rawvideo" ];   then OUTVCODEC="-vcodec rawvideo"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f rawvideo"
      fi
    elif [ "$codecVout" == "xvid" ];       then OUTVCODEC="-vcodec libxvid"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f mp4"
      fi
    elif [ "$codecVout" == "mpg" ];       then OUTVCODEC="-vcodec mpeg1video"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f mpeg"
      fi
    elif [ "$codecVout" == "vob" ];       then OUTVCODEC="-vcodec mpeg2video"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f mpeg"
      fi
    elif [ "$codecVout" == "h264" ];       then OUTVCODEC="-vcodec libx264"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f mp4"
      fi
    elif [ "$codecVout" == "h264-nvenc" ]; then OUTVCODEC="-vcodec nvenc"
	  # ricorda che esiste anche l'opzione "-hwaccel auto" (su linux usa VDPAU, su win DXVA2)
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f mp4"
      fi
    elif [ "$codecVout" == "h264-gpu" ];   then OUTVCODEC="-vcodec h264_nvenc"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f mp4"
      fi
    elif [ "$codecVout" == "h265" ];       then OUTVCODEC="-vcodec libx265"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f mp4"
      fi
    elif [ "$codecVout" == "libx265" ];    then OUTVCODEC="-vcodec libx265"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f mp4"
      fi
    elif [ "$codecVout" == "h265-gpu" ];   then OUTVCODEC="-vcodec hevc_nvenc"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f mp4"
      fi
    elif [ "$codecVout" == "vp8" ];        then OUTVCODEC="-vcodec libvpx"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f webm"
      fi
      if [ "$OUTACODEC" != "-an" ] && [ "$OUTACODEC" != "-acodec vorbis" ]
      then
        OUTACODEC="-acodec vorbis"
      fi
    elif [ "$codecVout" == "vp8-gpu" ];    then OUTVCODEC="-vcodec libvpx -cuda_me_enabled 1"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f webm"
      fi
      if [ "$OUTACODEC" != "-an" ] && [ "$OUTACODEC" != "-acodec vorbis" ]
      then
        OUTACODEC="-acodec vorbis"
      fi
    elif [ "$codecVout" == "vp9" ];        then OUTVCODEC="-vcodec libvpx-vp9"
      if [ "$OUTFCODEC" == "" ]
      then
        OUTFCODEC="-f webm"
      fi
      if [ "$OUTACODEC" != "-an" ] && [ "$OUTACODEC" != "-acodec vorbis" ]
      then
        OUTACODEC="-acodec vorbis"
      fi
    elif [ "$codecVout" == "copy" ];       then OUTVCODEC="-vcodec copy"
    elif [ "$codecVout" == "none" ];       then OUTVCODEC="-vn"
    fi
  else
    OUTVCODEC="-vn"
  fi

  #if [ "$OUTACODEC" == "-an" ] && [ "$OUTVCODEC" == "GPU" ] 
  #then 
  #  OUTCMD=`echo $OUTCMD | tr -d "\-y "`
  #fi

  if [ "$codecVbitrate" != "" ];     then    VBITRATE="-b:v $codecVbitrate"
  fi

  if [ "$codecAbitrate" != "" ];     then    ABITRATE="-b:a $codecAbitrate"
  fi

  if [ "$codecVinSize" != "" ];      then    VINSIZE="-s $codecVinSize"
  fi
  
  if [ "$codecVoutSize" != "" ];           then VOUTSIZE="-s $codecVoutSize"
  else
    if [ "$codecVoutSizeWidth" == "" ];    then VOUTSIZE=""; VOUTSIZEW=""
    elif [ "$codecVoutSizeHeight" == "" ]; then VOUTSIZE=""; VOUTSIZEH=""
    else                                        VOUTSIZE="-s "$codecVoutSizeWidth"x"$codecVoutSizeHeight; VOUTSIZEW=$codecVoutSizeWidth; VOUTSIZEH=$codecVoutSizeHeight
    fi
    #if [ "$codecVoutSizeWidth" != "" ];     then      VOUTSIZEW="$codecVoutSizeWidth"
    #fi
    #if [ "$codecVoutSizeHeight" != "" ];    then      VOUTSIZEH="$codecVoutSizeHeight"
    #fi
    #VOUTSIZE="-s "$VOUTSIZEW"x"$VOUTSIZEH
  fi

  if [ "$codecVframerate" != "" ];   then    VFRAMERATE="-r $codecVframerate"
  fi  
  
  if [ "$codecAsamplerate" != "" ];  then    ASAMPLERATE="-ar $codecAsamplerate"
  fi
  
  if [ "$codecAchannels" != "" ];    then    ACHANNELS="-ac $codecAchannels"
  fi
  
  if [ "$rtspInPort" != "" ] || [ "$localInStream" != "" ] 
  then 
    if [ "$OUTVCODEC" != "GPU" ] 
    then
      if [ "$localOutStream" != "" ]
      then
        vTUlogger $VTUEXE $INCMD -strict -2 $OUTFCODEC $OUTVCODEC $VOUTSIZE $VFRAMERATE $VBITRATE $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE -y $TMPOUTCMD 
        $VTUEXE $INCMD -strict -2 $OUTFCODEC $OUTVCODEC $VOUTSIZE $VFRAMERATE $VBITRATE $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE -y $TMPOUTCMD 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log 
        vTUlogger mv $TMPOUTCMD $OUTCMD
        mv $TMPOUTCMD $OUTCMD >> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
      else
        #vTUlogger $VTUEXE $INCMD -strict -2 $OUTFCODEC $OUTVCODEC $VOUTSIZE $VFRAMERATE $VBITRATE $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE $OUTCMD    
        #$VTUEXE $INCMD -strict -2 $OUTFCODEC $OUTVCODEC $VOUTSIZE $VFRAMERATE $VBITRATE $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE $OUTCMD 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log 
        TMPF=`echo $VTUDIR/$VTUTMP/$RANDOM`
        vTUlogger nohup $VTUEXE $INCMD -y -strict -2 -f avi -codec copy $TMPF    
        nohup $VTUEXE $INCMD -y -strict -2 -f avi -codec copy $TMPF 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.INrtsp.log& 
        if [ "$rtspOutIp" != "" ] && [ "$rtspOutPort" != "" ]
        then
          to=0; 
          while [ ! -e $TMPF ] && [ $to -ne $INTIMEOUT ]
          do
            let to=$to+1
            sleep 1
          done
          if [ $to -le $INTIMEOUT ]
          then
          #sleep 2
          sleep 10
            vTUlogger $VTUEXE -re -i $TMPF -strict -2 $OUTVCODEC $VOUTSIZE $VFRAMERATE $VBITRATE $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE $OUTCMD 
            $VTUEXE -re -i $TMPF -strict -2 $OUTVCODEC $VOUTSIZE $VFRAMERATE $VBITRATE $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE $OUTCMD 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log 
          fi
          #cp $TMPF $VTUDIR/$VTUTMP/papero
        fi
        #rm -f $TMPF
      fi
    else
      #if [ "$OUTACODEC" == "-an" ]
      #if [ "$OUTACODEC" != "-an" ]
      #then
        localOutGpu0Stream=`echo $localOutStream | sed 's/.mp4/.gpu0.mp4/g'`
        TMPF=$(mktemp $VTUDIR$VTUTMP/XXXX)
        vTUlogger $VTUEXE $INCMD -c:v rawvideo -pix_fmt yuv420p $VOUTSIZE -y -f rawvideo $TMPF
        $VTUEXE $INCMD -c:v rawvideo -pix_fmt yuv420p $VOUTSIZE -y -f rawvideo $TMPF 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log

# to nvenc 6.0 
        #vTUlogger $NVENCEXE -o $VTUDIR/$VTUTMP/$localOutStream -i $TMPF -size $VOUTSIZEW $VOUTSIZEH -fps 25 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log 1>&2
        #$NVENCEXE -o $VTUDIR/$VTUTMP/$localOutStream -i $TMPF -size $VOUTSIZEW $VOUTSIZEH -fps 25 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log 1>&2
# to nvenc 4.0 
        cp $VTUDIR/$VTUSYS/defaultNvEnc.conf $TMPF.conf
        sed -i "s/__WIDTH__/$VOUTSIZEW/g" $TMPF.conf
        sed -i "s/__HEIGHT__/$VOUTSIZEH/g" $TMPF.conf
        echo "inFile = "$TMPF >> $TMPF.conf
        #sed -i 's/__INPUTF__/$TMPF/g' $VTUDIR/$VTUTMP/defaultNvEnc.conf
        vTUlogger $NVENCEXE -configfile=$TMPF.conf -outfile=$VTUDIR/$VTUTMP/$localOutStream >> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log 1>&2
        $NVENCEXE -configfile=$TMPF.conf -outfile=$VTUDIR/$VTUTMP/$localOutStream 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log 1>&2

        vTUlogger $VTUEXE $INCMD -vn $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE -strict -2 -f $codecAout $VTUDIR/$VTUTMP/$localOutStream.audio 
        #$NVENCEXE $INCMD -vn $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE -strict -2 -f $codecAout $VTUDIR/$VTUTMP/$localOutStream.audio 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
        $VTUEXE $INCMD -vn $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE -strict -2 -f $codecAout $VTUDIR/$VTUTMP/$localOutStream.audio 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log

        vTUlogger "$VTUEXE -i $VTUDIR/$VTUTMP/$localOutGpu0Stream -i $VTUDIR/$VTUTMP/$localOutStream.audio -c copy -shortest $OUTCMD"
        $VTUEXE -i $VTUDIR/$VTUTMP/$localOutGpu0Stream -i $VTUDIR/$VTUTMP/$localOutStream.audio -c copy -shortest $OUTCMD 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log
        
        rm -f $TMPF
        rm -f $TMPF.conf
        rm -f $VTUDIR/$VTUTMP/$localOutGpu0Stream
        rm -f $VTUDIR/$VTUTMP/$localOutStream.audio
      #else
      #  vTUlogger $NVENCEXE $INCMD -vcodec h264 $VOUTSIZE $VFRAMERATE $VBITRATE $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE $OUTCMD    
      #  $NVENCEXE $INCMD -strict -2 -vcodec h264 $VOUTSIZE $VFRAMERATE $VBITRATE $OUTACODEC $ASAMPLERATE $ACHANNELS $ABITRATE $OUTCMD 2>> $VTUDIR/$VTULOG/$TODAY/$XMLFILE.$NR.$DATA.log 
      #fi
    fi
  else
    vTUlogger "$VTUEXE parameters Not implemented yet " $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA
    echo "$VTUEXE parameters Not implemented yet " >> $VTUDIR/$VTUERR/$TODAY/$XMLFILE.$NR.$DATA.log
  fi

done

mv $VTUDIR/$VTURUN/$XMLFILE.$NR.$DATA $VTUDIR/$VTUDONE/$TODAY/$XMLFILE.$NR.$DATA


