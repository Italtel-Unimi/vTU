# Hiawatha main configuration file
#

# VARIABLES
# With 'set', you can declare a variable. Make sure the name of the
# variable doesn't conflict with any of the configuration options. The 
# variables are case-sensitive and cannot be redeclared.
#
#set LOCALHOST = 127.0.0.0/8


# GENERAL SETTINGS
#
#ServerId = www-data
ConnectionsTotal = 1000
ConnectionsPerIP = 25
SystemLogfile = /usr/local/var/log/hiawatha/system.log
GarbageLogfile = /usr/local/var/log/hiawatha/garbage.log


# BINDING SETTINGS
# A binding is where a client can connect to.
#
Binding {
	Port = 80
	EnableAlter = yes
	Interface = 138.132.104.86
#	MaxKeepAlive = 30
#	TimeForRequest = 3,20
        MaxRequestSize = 16384
	MaxUploadSize = 15
}
#
Binding {
	Port = 443
	Interface = 138.132.104.86
#	MaxKeepAlive = 30
#	TimeForRequest = 3,20
#	TLScertFile = hiawatha.pem
#	SSLcertFile = hiawatha.pem
#        ServerKey = /usr/local/etc/hiawatha/webui_serverkey.pem
#        UseSSL = yes
}

# BANNING SETTINGS
# Deny service to clients who misbehave.
#
#BanOnGarbage = 300
#BanOnMaxPerIP = 60
#BanOnMaxReqSize = 300
#KickOnBan = yes
#RebanDuringBan = yes


# COMMON GATEWAY INTERFACE (CGI) SETTINGS
# These settings can be used to run CGI applications.
#
CGIhandler = /usr/bin/perl:pl
CGIhandler = /usr/bin/php-cgi:php
CGIhandler = /usr/bin/python:py
CGIhandler = /usr/bin/ruby:rb
CGIhandler = /usr/bin/ssi-cgi:shtml
CGIextension = cgi
#
FastCGIserver {
	FastCGIid = PHP5
	ConnectTo = 127.0.0.1:2005
#	ConnectTo = 138.132.104.86:2005
	Extension = php
}


# URL TOOLKIT
# This URL toolkit rule was made for the Banshee PHP framework, which
# can be downloaded from http://www.hiawatha-webserver.org/banshee
#
#UrlToolkit {
#	ToolkitID = banshee
#	RequestURI isfile Return
#	Match ^/(css|files|images|js|slimstat)($|/) Return
#	Match ^/(favicon.ico|robots.txt|sitemap.xml)$ Return
#	Match .*\?(.*) Rewrite /index.php?$1
#	Match .* Rewrite /index.php
#}


# DEFAULT WEBSITE
# It is wise to use your IP address as the hostname of the default website
# and give it a blank webpage. By doing so, automated webscanners won't find
# your possible vulnerable website.
#
#Hostname = 127.0.0.1
#Hostname = vTU-Tnova
Hostname = vTU-Tnova , 138.132.104.86
#Hostname = 138.132.104.86
WebsiteRoot = /vTU
#WebsiteRoot = /usr/local/var/www/hiawatha
StartFile = index.html
AccessLogfile = /usr/local/var/log/hiawatha/access.log
ErrorLogfile = /usr/local/var/log/hiawatha/error.log
ExploitLogfile = /usr/local/var/log/hiawatha/exploit.log
#ErrorHandler = 404:/error.cgi
        RequestLimitMask = allow all


# VIRTUAL HOSTS
# Use a VirtualHost section to declare the websites you want to host.
#
#VirtualHost {
##	Hostname = www.my-domain.com
#	Hostname = 138.132.104.86
##	WebsiteRoot = /var/www/my-domain/public
#	WebsiteRoot = /vTU
##	StartFile = index.php
##	AccessLogfile = /var/www/my-domain/log/access.log
#	AccessLogfile = /vTU/log/access.log
##	ErrorLogfile = /var/www/my-domain/log/error.log
#	ErrorLogfile = /vTU/log/error.log
#	TimeForCGI = 5
#	UseFastCGI = PHP5
##	UseToolkit = banshee
#}


# DIRECTORY SETTINGS
# You can specify some settings per directory.
#
Directory {
	Path = /vTU/input/
        AccessList = allow all
        AlterList = allow all
        ShowIndex = /usr/local/etc/hiawatha/index.xslt 
	ExecuteCGI = no
	UploadSpeed = 10,2
}
Directory {
	Path = /vTU/spool/
        AccessList = allow all
        AlterList = allow all
        ShowIndex = /usr/local/etc/hiawatha/index.xslt 
	ExecuteCGI = no
	UploadSpeed = 10,2
}
